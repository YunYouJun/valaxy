{
  "name": "@valaxyjs/monorepo",
  "type": "module",
  "version": "0.8.1",
  "private": true,
  "packageManager": "pnpm@7.3.0",
  "description": "ðŸ“„ Vite & Vue powered static blog generator.",
  "author": {
    "email": "me@yunyoujun.cn",
    "name": "YunYouJun",
    "url": "https://www.yunyoujun.cn"
  },
  "license": "MIT",
  "repository": "https://github.com/YunYouJun/valaxy",
  "keywords": [
    "vite",
    "vue",
    "blog"
  ],
  "engines": {
    "node": ">=14.0.0"
  },
  "scripts": {
    "build": "pnpm run build:valaxy && pnpm run build:theme",
    "build:valaxy": "pnpm -C packages/valaxy run build",
    "build:theme": "pnpm -C packages/valaxy-theme-yun run build",
    "build:demo": "pnpm -C demo/yun run build",
    "ci:publish": "zx scripts/publish.mjs",
    "demo": "pnpm -C demo/yun run dev",
    "dev:lib": "pnpm -C packages/valaxy run dev",
    "dev:theme": "pnpm -C packages/valaxy-theme-yun run dev",
    "dev": "pnpm -r --filter=./packages/** --parallel run dev",
    "lint": "eslint .",
    "prepublishOnly": "npm run build",
    "release": "tsx scripts/release.ts",
    "start": "node packages/valaxy/bin/valaxy.js dev",
    "typecheck": "vue-tsc --noEmit --skipLibCheck",
    "test": "vitest",
    "test:space": "export NODE_OPTIONS='--inspect --max-old-space-size=2048' && pnpm -C demo/yun run build:ssg"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^0.25.2",
    "@types/debug": "^4.1.7",
    "@types/prompts": "^2.0.14",
    "@types/resolve": "^1.20.2",
    "@types/semver": "^7.3.10",
    "cross-env": "^7.0.3",
    "eslint": "^8.19.0",
    "lint-staged": "^13.0.3",
    "prompts": "^2.4.2",
    "rimraf": "^3.0.2",
    "simple-git-hooks": "^2.8.0",
    "tsup": "^6.1.3",
    "tsx": "^3.7.1",
    "typescript": "^4.7.4",
    "valaxy": "workspace:*",
    "valaxy-theme-yun": "workspace:*",
    "vitest": "^0.18.0",
    "vue-tsc": "0.38.3",
    "zx": "^7.0.7"
  },
  "simple-git-hooks": {
    "pre-commit": "npx lint-staged"
  },
  "lint-staged": {
    "{packages,demo,scripts}/**/*.{js,ts,vue,json,yml}": [
      "eslint --fix"
    ]
  }
}
