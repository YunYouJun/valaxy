// import { loadConfig } from 'c12'
import fs from 'fs-extra'
import defu from 'defu'
import { ensureSuffix } from '@antfu/utils'
import { normalizePath } from 'vite'
import { loadConfig } from 'unconfig'
import type { VitePluginConfig as UnoCssConfig } from 'unocss/vite'
import type { Awaitable } from '@antfu/utils'
import type { UserConfig, ValaxySiteConfig } from '../types'
import type { ResolvedValaxyOptions, ValaxyConfig, ValaxyEntryOptions } from './options'

/**
 * Type site helper
 */
export function defineSite<ThemeConfig>(config: UserConfig<ThemeConfig>) {
  return config
}

/**
 * Type site helper for custom theme site
 */
export function defineSiteWithTheme<ThemeConfig>(
  config: UserConfig<ThemeConfig>,
) {
  return config
}

export type ValaxyConfigExport = ValaxyConfig | Promise<ValaxyConfig> | ValaxyConfigFn
export type ValaxyConfigFn = (options: ResolvedValaxyOptions) => ValaxyConfig | Promise<ValaxyConfig>
/**
 * Type valaxy config helper
 */
export function defineConfig(config: ValaxyConfigExport) {
  return config
}

const defaultSiteConfig: ValaxySiteConfig = {
  mode: 'auto',
  url: '/',
  lang: 'en',
  title: 'Valaxy Blog',
  description: 'A blog generated by Valaxy.',
  subtitle: 'Next Generation Static Blog Framework.',
  author: {
    avatar: 'https://www.yunyoujun.cn/images/avatar.jpg',
    email: 'me@yunyoujun.cn',
    link: 'https://www.yunyoujun.cn',
    name: 'YunYouJun',
    status: {
      emoji: 'üòä',
      message: 'All at sea.',
    },
  },
  favicon: '/favicon.svg',
  feed: {
    name: '',
    favicon: '/favicon.svg',
  },
  social: [],

  date: {
    format: '',
  },
  lastUpdated: true,

  license: {
    enabled: true,
    language: '',
    type: 'by-nc-sa',
  },

  sponsor: {
    enable: true,
    title: 'ÊàëÂæàÂèØÁà±ÔºåËØ∑ÁªôÊàëÈí±',
    methods: [],
  },

  search: {
    enable: false,
    algolia: {
      enable: false,
      appId: '',
      apiKey: '',
      indexName: '',
    },
  },

  comment: {
    enable: false,
    waline: {
      enable: false,
      serverURL: '',
    },
    twikoo: {
      enable: false,
      envId: 'https://twikoo.vercel.app',
    },
  },

  cdn: {
    prefix: 'https://npm.elemecdn.com/',
  },

  features: {
    katex: true,
  },

  theme: 'yun',
  themeConfig: {
    pkg: {
      name: '',
      version: '',
    },
  },

  // markdown: {
  //   excerpt: '<!-- more -->',
  // },
}

// for user config
export async function resolveSiteConfig(options: ValaxyEntryOptions = {}) {
  // c12 merge array twice, so i deprecated it
  // const { config, configFile } = await loadConfig<ValaxySiteConfig>({
  //   name: 'valaxy',
  //   defaults: defaultSiteConfig,
  // })

  const { config: userConfig, sources } = await loadConfig<ValaxySiteConfig>({
    sources: [
      {
        files: 'site.config',
        extensions: ['ts', 'js', 'mjs', 'cjs', 'json'],
      },
    ],
    merge: false,
  })

  const configFile = normalizePath(sources[0] || '')

  const config = defu(userConfig, defaultSiteConfig)
  // ensure suffix for cdn prefix
  config.cdn.prefix = ensureSuffix('/', config.cdn.prefix)

  const theme = options.theme || config.theme || 'yun'

  try {
    const { defaultThemeConfig } = await import(`valaxy-theme-${theme}`)
    config.themeConfig = defu(config.themeConfig, defaultThemeConfig)
  }
  catch (e) {
    console.error(`valaxy-theme-${theme} doesn't have default config`)
  }

  try {
    const pkg = fs.readFileSync(require.resolve(`valaxy-theme-${theme}/package.json`), 'utf-8')
    config.themeConfig.pkg = JSON.parse(pkg)
  }
  catch (e) {
    console.error(`valaxy-theme-${theme} doesn't have package.json`)
  }

  config.url = ensureSuffix('/', config.url)

  return {
    config,
    configFile,
    theme,
  }
}

export type UnoSetup = () => Awaitable<Partial<UnoCssConfig> | undefined>

export function defineUnoSetup(fn: UnoSetup) {
  return fn
}
